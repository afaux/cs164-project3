//
//  Event.m
//  project3
//
//  Spencer de Mars
//  Ainsley Faux
//
//  This serves 2 purposes:
//  1) Represent a helper class / encapsulation of an event, which is essentially all the information
//  about an event the users have the opportunity to bet on
//  2) Act as an NSManagedObject to store events in Core Data
//

#import "Event.h"
#import "Bet.h"


@implementation Event

// event category
@dynamic category;
// detailed description of event
@dynamic details;
// id number
@dynamic idNumber;
// maximum allowed wager as a fraction of total wealth
@dynamic maxWager;
// odds on outcome 1, meaning payoff for x wagered on outcome 1 is x:(1+odds1) 
@dynamic odds1;
// description of outcome 1
@dynamic outcome1;
// description of outcome 2
@dynamic outcome2;
// status: 0 means undecided, 1 means outcome 1, 2 means outcome 2
@dynamic status;
// title / brief description of event
@dynamic title;
// odds on outcome 2
@dynamic odds2;
// optional associated bet - autogenerated because xcode wanted Bet->Event to have an inverse
@dynamic bet;

@end
